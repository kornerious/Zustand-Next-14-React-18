/*! For license information please see 645.e93bd5b6.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunknext_zustand_ts=self.webpackChunknext_zustand_ts||[]).push([[645],{"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js":(__unused_webpack_module,exports,__webpack_require__)=>{var React=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var objectIs="function"==typeof Object.is?Object.is:function is(x,y){return x===y&&(0!==x||1/x==1/y)||x!=x&&y!=y},useState=React.useState,useEffect=React.useEffect,useLayoutEffect=React.useLayoutEffect,useDebugValue=React.useDebugValue;function checkIfSnapshotChanged(inst){var latestGetSnapshot=inst.getSnapshot;inst=inst.value;try{var nextValue=latestGetSnapshot();return!objectIs(inst,nextValue)}catch(error){return!0}}var shim="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function useSyncExternalStore$1(subscribe,getSnapshot){return getSnapshot()}:function useSyncExternalStore$2(subscribe,getSnapshot){var value=getSnapshot(),_useState=useState({inst:{value,getSnapshot}}),inst=_useState[0].inst,forceUpdate=_useState[1];return useLayoutEffect((function(){inst.value=value,inst.getSnapshot=getSnapshot,checkIfSnapshotChanged(inst)&&forceUpdate({inst})}),[subscribe,value,getSnapshot]),useEffect((function(){return checkIfSnapshotChanged(inst)&&forceUpdate({inst}),subscribe((function(){checkIfSnapshotChanged(inst)&&forceUpdate({inst})}))}),[subscribe]),useDebugValue(value),value};exports.useSyncExternalStore=void 0!==React.useSyncExternalStore?React.useSyncExternalStore:shim},"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js":(__unused_webpack_module,exports,__webpack_require__)=>{var React=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),shim=__webpack_require__("./node_modules/use-sync-external-store/shim/index.js");var objectIs="function"==typeof Object.is?Object.is:function is(x,y){return x===y&&(0!==x||1/x==1/y)||x!=x&&y!=y},useSyncExternalStore=shim.useSyncExternalStore,useRef=React.useRef,useEffect=React.useEffect,useMemo=React.useMemo,useDebugValue=React.useDebugValue;exports.useSyncExternalStoreWithSelector=function(subscribe,getSnapshot,getServerSnapshot,selector,isEqual){var instRef=useRef(null);if(null===instRef.current){var inst={hasValue:!1,value:null};instRef.current=inst}else inst=instRef.current;instRef=useMemo((function(){function memoizedSelector(nextSnapshot){if(!hasMemo){if(hasMemo=!0,memoizedSnapshot=nextSnapshot,nextSnapshot=selector(nextSnapshot),void 0!==isEqual&&inst.hasValue){var currentSelection=inst.value;if(isEqual(currentSelection,nextSnapshot))return memoizedSelection=currentSelection}return memoizedSelection=nextSnapshot}if(currentSelection=memoizedSelection,objectIs(memoizedSnapshot,nextSnapshot))return currentSelection;var nextSelection=selector(nextSnapshot);return void 0!==isEqual&&isEqual(currentSelection,nextSelection)?(memoizedSnapshot=nextSnapshot,currentSelection):(memoizedSnapshot=nextSnapshot,memoizedSelection=nextSelection)}var memoizedSnapshot,memoizedSelection,hasMemo=!1,maybeGetServerSnapshot=void 0===getServerSnapshot?null:getServerSnapshot;return[function(){return memoizedSelector(getSnapshot())},null===maybeGetServerSnapshot?void 0:function(){return memoizedSelector(maybeGetServerSnapshot())}]}),[getSnapshot,getServerSnapshot,selector,isEqual]);var value=useSyncExternalStore(subscribe,instRef[0],instRef[1]);return useEffect((function(){inst.hasValue=!0,inst.value=value}),[value]),useDebugValue(value),value}},"./node_modules/use-sync-external-store/shim/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js")},"./node_modules/use-sync-external-store/shim/with-selector.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js")},"./node_modules/zustand/esm/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{vt:()=>create});var console=__webpack_require__("./node_modules/console-browserify/index.js");const createStoreImpl=createState=>{let state;const listeners=new Set,setState=(partial,replace)=>{const nextState="function"==typeof partial?partial(state):partial;if(!Object.is(nextState,state)){const previousState=state;state=(null!=replace?replace:"object"!=typeof nextState||null===nextState)?nextState:Object.assign({},state,nextState),listeners.forEach((listener=>listener(state,previousState)))}},getState=()=>state,api={setState,getState,getInitialState:()=>initialState,subscribe:listener=>(listeners.add(listener),()=>listeners.delete(listener)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),listeners.clear()}},initialState=state=createState(setState,getState,api);return api},createStore=createState=>createState?createStoreImpl(createState):createStoreImpl;var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),with_selector=__webpack_require__("./node_modules/use-sync-external-store/shim/with-selector.js"),esm_console=__webpack_require__("./node_modules/console-browserify/index.js");const{useDebugValue}=react,{useSyncExternalStoreWithSelector}=with_selector;let didWarnAboutEqualityFn=!1;const identity=arg=>arg;const createImpl=createState=>{"function"!=typeof createState&&esm_console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const api="function"==typeof createState?createStore(createState):createState,useBoundStore=(selector,equalityFn)=>function useStore(api,selector=identity,equalityFn){equalityFn&&!didWarnAboutEqualityFn&&(esm_console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),didWarnAboutEqualityFn=!0);const slice=useSyncExternalStoreWithSelector(api.subscribe,api.getState,api.getServerState||api.getInitialState,selector,equalityFn);return useDebugValue(slice),slice}(api,selector,equalityFn);return Object.assign(useBoundStore,api),useBoundStore},create=createState=>createState?createImpl(createState):createImpl},"./node_modules/zustand/esm/middleware.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{KU:()=>createJSONStorage,Zr:()=>persist});var console=__webpack_require__("./node_modules/console-browserify/index.js");function createJSONStorage(getStorage,options){let storage;try{storage=getStorage()}catch(_e){return}return{getItem:name=>{var _a;const parse=str2=>null===str2?null:JSON.parse(str2,null==options?void 0:options.reviver),str=null!=(_a=storage.getItem(name))?_a:null;return str instanceof Promise?str.then(parse):parse(str)},setItem:(name,newValue)=>storage.setItem(name,JSON.stringify(newValue,null==options?void 0:options.replacer)),removeItem:name=>storage.removeItem(name)}}const toThenable=fn=>input=>{try{const result=fn(input);return result instanceof Promise?result:{then:onFulfilled=>toThenable(onFulfilled)(result),catch(_onRejected){return this}}}catch(e){return{then(_onFulfilled){return this},catch:onRejected=>toThenable(onRejected)(e)}}},persist=(config,baseOptions)=>"getStorage"in baseOptions||"serialize"in baseOptions||"deserialize"in baseOptions?(console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),((config,baseOptions)=>(set,get,api)=>{let options={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:state=>state,version:0,merge:(persistedState,currentState)=>({...currentState,...persistedState}),...baseOptions},hasHydrated=!1;const hydrationListeners=new Set,finishHydrationListeners=new Set;let storage;try{storage=options.getStorage()}catch(_e){}if(!storage)return config(((...args)=>{console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`),set(...args)}),get,api);const thenableSerialize=toThenable(options.serialize),setItem=()=>{const state=options.partialize({...get()});let errorInSync;const thenable=thenableSerialize({state,version:options.version}).then((serializedValue=>storage.setItem(options.name,serializedValue))).catch((e=>{errorInSync=e}));if(errorInSync)throw errorInSync;return thenable},savedSetState=api.setState;api.setState=(state,replace)=>{savedSetState(state,replace),setItem()};const configResult=config(((...args)=>{set(...args),setItem()}),get,api);let stateFromStorage;const hydrate=()=>{var _a;if(!storage)return;hasHydrated=!1,hydrationListeners.forEach((cb=>cb(get())));const postRehydrationCallback=(null==(_a=options.onRehydrateStorage)?void 0:_a.call(options,get()))||void 0;return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue=>{if(storageValue)return options.deserialize(storageValue)})).then((deserializedStorageValue=>{if(deserializedStorageValue){if("number"!=typeof deserializedStorageValue.version||deserializedStorageValue.version===options.version)return deserializedStorageValue.state;if(options.migrate)return options.migrate(deserializedStorageValue.state,deserializedStorageValue.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}})).then((migratedState=>{var _a2;return stateFromStorage=options.merge(migratedState,null!=(_a2=get())?_a2:configResult),set(stateFromStorage,!0),setItem()})).then((()=>{null==postRehydrationCallback||postRehydrationCallback(stateFromStorage,void 0),hasHydrated=!0,finishHydrationListeners.forEach((cb=>cb(stateFromStorage)))})).catch((e=>{null==postRehydrationCallback||postRehydrationCallback(void 0,e)}))};return api.persist={setOptions:newOptions=>{options={...options,...newOptions},newOptions.getStorage&&(storage=newOptions.getStorage())},clearStorage:()=>{null==storage||storage.removeItem(options.name)},getOptions:()=>options,rehydrate:()=>hydrate(),hasHydrated:()=>hasHydrated,onHydrate:cb=>(hydrationListeners.add(cb),()=>{hydrationListeners.delete(cb)}),onFinishHydration:cb=>(finishHydrationListeners.add(cb),()=>{finishHydrationListeners.delete(cb)})},hydrate(),stateFromStorage||configResult})(config,baseOptions)):((config,baseOptions)=>(set,get,api)=>{let options={storage:createJSONStorage((()=>localStorage)),partialize:state=>state,version:0,merge:(persistedState,currentState)=>({...currentState,...persistedState}),...baseOptions},hasHydrated=!1;const hydrationListeners=new Set,finishHydrationListeners=new Set;let storage=options.storage;if(!storage)return config(((...args)=>{console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`),set(...args)}),get,api);const setItem=()=>{const state=options.partialize({...get()});return storage.setItem(options.name,{state,version:options.version})},savedSetState=api.setState;api.setState=(state,replace)=>{savedSetState(state,replace),setItem()};const configResult=config(((...args)=>{set(...args),setItem()}),get,api);let stateFromStorage;api.getInitialState=()=>configResult;const hydrate=()=>{var _a,_b;if(!storage)return;hasHydrated=!1,hydrationListeners.forEach((cb=>{var _a2;return cb(null!=(_a2=get())?_a2:configResult)}));const postRehydrationCallback=(null==(_b=options.onRehydrateStorage)?void 0:_b.call(options,null!=(_a=get())?_a:configResult))||void 0;return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue=>{if(deserializedStorageValue){if("number"!=typeof deserializedStorageValue.version||deserializedStorageValue.version===options.version)return[!1,deserializedStorageValue.state];if(options.migrate)return[!0,options.migrate(deserializedStorageValue.state,deserializedStorageValue.version)];console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}return[!1,void 0]})).then((migrationResult=>{var _a2;const[migrated,migratedState]=migrationResult;if(stateFromStorage=options.merge(migratedState,null!=(_a2=get())?_a2:configResult),set(stateFromStorage,!0),migrated)return setItem()})).then((()=>{null==postRehydrationCallback||postRehydrationCallback(stateFromStorage,void 0),stateFromStorage=get(),hasHydrated=!0,finishHydrationListeners.forEach((cb=>cb(stateFromStorage)))})).catch((e=>{null==postRehydrationCallback||postRehydrationCallback(void 0,e)}))};return api.persist={setOptions:newOptions=>{options={...options,...newOptions},newOptions.storage&&(storage=newOptions.storage)},clearStorage:()=>{null==storage||storage.removeItem(options.name)},getOptions:()=>options,rehydrate:()=>hydrate(),hasHydrated:()=>hasHydrated,onHydrate:cb=>(hydrationListeners.add(cb),()=>{hydrationListeners.delete(cb)}),onFinishHydration:cb=>(finishHydrationListeners.add(cb),()=>{finishHydrationListeners.delete(cb)})},options.skipHydration||hydrate(),stateFromStorage||configResult})(config,baseOptions)}}]);